{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/PeoplePage/PeopleTable/PersonRow/PersonRow.tsx","components/PeoplePage/PeopleTable/PeopleTable.tsx","api/people.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","isActive","HomePage","PersonRow","person","name","sex","born","died","mother","style","listStyleType","father","PeopleTable","people","map","slug","getPeople","a","fetch","response","json","PeoplePage","useState","setPeople","visiblePeople","setVisiblePeople","getPreparePeople","peopleFromServer","peopleWithMotherFather","find","motherName","fatherName","useEffect","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"mOAEaA,EAAmB,kBAC9B,qBAAKC,UAAU,wBAAf,SACE,qBAAIA,UAAU,OAAd,UACE,oBAAIA,UAAU,wCAAd,SACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,qBAAGE,SACD,gBAAkB,sBAHjC,yBAUF,oBAAIF,UAAU,8BAAd,SACE,cAAC,IAAD,CACEC,GAAG,UACHD,UAAW,qBAAGE,SACD,gBAAkB,sBAHjC,iCCjBKC,EAAqB,kBAChC,8BACE,8C,6CCISC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,+BACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BACqB,OAAlBJ,EAAOK,OACN,qBAAIV,UAAU,MAAMW,MAAO,CAAEC,cAAe,QAA5C,UACE,6BAAKP,EAAOK,OAAOJ,OACnB,6CAAcD,EAAOK,OAAOF,QAC5B,6CAAcH,EAAOK,OAAOD,WAG9B,qBAGJ,6BACqB,OAAlBJ,EAAOQ,OACN,qBAAIb,UAAU,MAAMW,MAAO,CAAEC,cAAe,QAA5C,UACE,6BAAKP,EAAOQ,OAAOP,OACnB,6CAAcD,EAAOQ,OAAOL,QAC5B,6CAAcH,EAAOQ,OAAOJ,WAG9B,yBCvBKK,EAAgC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9C,OACE,wBAAOf,UAAU,iFAAjB,UAGE,gCACE,qBAAIA,UAAU,cAAd,UACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGe,EAAOC,KAAI,SAAAX,GAAM,OAChB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOY,eCvBpBC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHR,qEAEQ,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCETC,EAAuB,WAClC,MAA4BC,mBAAsB,IAAlD,mBAAOT,EAAP,KAAeU,EAAf,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEMC,EAAgB,uCAAG,8BAAAT,EAAA,sEACQD,IADR,OACjBW,EADiB,OAGjBC,EAAyBD,EAC5Bb,KAAI,SAACX,GAAD,mBAAC,eACDA,GADA,IAEHK,OAAQmB,EAAiBE,MAAK,SAACrB,GAAD,OAC5BA,EAAOJ,OAASD,EAAO2B,eAAgB,KACzCnB,OAAQgB,EAAiBE,MAAK,SAAClB,GAAD,OAC5BA,EAAOP,OAASD,EAAO4B,eAAgB,UAG7CR,EAAUK,GACVH,GAAiB,GAbM,2CAAH,qDAoBtB,OAJAO,qBAAU,WACRN,MACC,IAGD,gCACE,6CACCF,EACC,cAAC,EAAD,CAAaX,OAAQA,IAErB,iBCnCKoB,EAAyB,kBACpC,iDCmBaC,EAbO,kBACpB,sBAAKpC,UAAU,gCAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUrC,GAAG,IAAIsC,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCT/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9255b6eb.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => (\n  <nav className=\"tabs is-centered ml-0\">\n    <ul className=\"ml-0\">\n      <li className=\"title is-4 pb-0 navbar-item mr-2 mb-0\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => (\n            isActive ? 'has-text-link' : 'has-text-grey-dark'\n          )}\n        >\n          Home page\n        </NavLink>\n      </li>\n\n      <li className=\"title is-4 pb-0 navbar-item\">\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => (\n            isActive ? 'has-text-link' : 'has-text-grey-dark'\n          )}\n        >\n          People page\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n","export const HomePage: React.FC = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n);\n","import { NewPerson } from '../../../../react-app-env';\n\ninterface Props {\n  person: NewPerson,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>\n      {person.mother !== null ? (\n        <ul className=\"m-0\" style={{ listStyleType: 'none' }}>\n          <li>{person.mother.name}</li>\n          <li>{`Born: ${person.mother.born}`}</li>\n          <li>{`Died: ${person.mother.died}`}</li>\n        </ul>\n      ) : (\n        'Mother not found'\n      )}\n    </td>\n    <td>\n      {person.father !== null ? (\n        <ul className=\"m-0\" style={{ listStyleType: 'none' }}>\n          <li>{person.father.name}</li>\n          <li>{`Born: ${person.father.born}`}</li>\n          <li>{`Died: ${person.father.died}`}</li>\n        </ul>\n      ) : (\n        'Father not found'\n      )}\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { PersonRow } from './PersonRow/PersonRow';\nimport { NewPerson } from '../../../react-app-env';\n\ninterface Props {\n  people: NewPerson[],\n}\n\nexport const PeopleTable: React.FC <Props> = ({ people }) => {\n  return (\n    <table className=\"table is-bordered is-striped is-hoverable\n      column is-half is-offset-one-quarter\"\n    >\n      <thead>\n        <tr className=\"is-selected\">\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import { useEffect, useState } from 'react';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\nimport { getPeople } from '../../api/people';\nimport { NewPerson } from '../../react-app-env';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<NewPerson[]>([]);\n  const [visiblePeople, setVisiblePeople] = useState(false);\n\n  const getPreparePeople = async () => {\n    const peopleFromServer = await getPeople();\n\n    const peopleWithMotherFather = peopleFromServer\n      .map((person: { motherName: string; fatherName: string }) => ({\n        ...person,\n        mother: peopleFromServer.find((mother: { name: string; }) => (\n          mother.name === person.motherName)) || null,\n        father: peopleFromServer.find((father: { name: string; }) => (\n          father.name === person.fatherName)) || null,\n      }));\n\n    setPeople(peopleWithMotherFather);\n    setVisiblePeople(true);\n  };\n\n  useEffect(() => {\n    getPreparePeople();\n  }, []);\n\n  return (\n    <div>\n      <h1>People Page</h1>\n      {visiblePeople ? (\n        <PeopleTable people={people} />\n      ) : (\n        'Loading...'\n      )}\n\n    </div>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n","import './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Header } from './components/Header/Header';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst App: React.FC = () => (\n  <div className=\"App content has-text-centered\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"people\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}